---
- name: Restart monasca-api container
  vars:
    service_name: "monasca-api"
    service: "{{ monasca_services[service_name] }}"
  become: true
  kolla_docker:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    volumes: "{{ service.volumes }}"
    dimensions: "{{ service.dimensions }}"
  when:
    - kolla_action != "config"

- name: Restart monasca-log-persister container
  vars:
    service_name: "monasca-log-persister"
    service: "{{ monasca_services[service_name] }}"
  become: true
  kolla_docker:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    volumes: "{{ service.volumes }}"
    dimensions: "{{ service.dimensions }}"
  when:
    - kolla_action != "config"

- name: Restart monasca-thresh container
  vars:
    service: "{{ monasca_services['monasca-thresh'] }}"
  become: true
  kolla_docker:
    action: "start_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    volumes: "{{ service.volumes }}"
    dimensions: "{{ service.dimensions }}"
    detach: False
    remove_on_exit: false
    restart_policy: no
    environment:
      KOLLA_BOOTSTRAP:
  run_once: True
  delegate_to: "{{ groups[service.group] | first }}"
  when:
    - kolla_action != "config"

- name: Resubmitting monasca-thresh topology
  vars:
    service: "{{ monasca_services['monasca-thresh'] }}"
  become: true
  kolla_docker:
    action: "start_container"
    common_options: "{{ docker_common_options }}"
    name: "resubmit_{{ service.container_name }}"
    image: "{{ service.image }}"
    volumes: "{{ service.volumes }}"
    dimensions: "{{ service.dimensions }}"
    detach: False
    restart_policy: no
    environment:
      KOLLA_BOOTSTRAP:
      TOPOLOGY_REPLACE:
  run_once: True
  delegate_to: "{{ groups[service.group] | first }}"
  when:
    - kolla_action != "config"

- name: Restart monasca-notification container
  vars:
    service_name: "monasca-notification"
    service: "{{ monasca_services[service_name] }}"
  become: true
  kolla_docker:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    volumes: "{{ service.volumes }}"
    dimensions: "{{ service.dimensions }}"
  when:
    - kolla_action != "config"

- name: Restart monasca-persister container
  vars:
    service_name: "monasca-persister"
    service: "{{ monasca_services[service_name] }}"
  become: true
  kolla_docker:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    volumes: "{{ service.volumes }}"
    dimensions: "{{ service.dimensions }}"
  when:
    - kolla_action != "config"

- name: Restart monasca-agent-collector container
  vars:
    service_name: "monasca-agent-collector"
    service: "{{ monasca_services[service_name] }}"
  become: true
  kolla_docker:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    pid_mode: "{{ service.pid_mode }}"
    volumes: "{{ service.volumes }}"
    dimensions: "{{ service.dimensions }}"
  when:
    - kolla_action != "config"

- name: Restart monasca-agent-forwarder container
  vars:
    service_name: "monasca-agent-forwarder"
    service: "{{ monasca_services[service_name] }}"
  become: true
  kolla_docker:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    volumes: "{{ service.volumes }}"
    dimensions: "{{ service.dimensions }}"
  when:
    - kolla_action != "config"

- name: Restart monasca-agent-statsd container
  vars:
    service_name: "monasca-agent-statsd"
    service: "{{ monasca_services[service_name] }}"
  become: true
  kolla_docker:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    volumes: "{{ service.volumes }}"
    dimensions: "{{ service.dimensions }}"
  when:
    - kolla_action != "config"
