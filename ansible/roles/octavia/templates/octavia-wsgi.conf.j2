{% set wsgi_directory = '/var/lib/kolla/venv/bin' %}
{% if octavia_enable_tls_backend | bool %}
{% if kolla_base_distro in ['centos', 'rocky']  %}
LoadModule ssl_module /usr/lib64/httpd/modules/mod_ssl.so
{% else %}
LoadModule ssl_module /usr/lib/apache2/modules/mod_ssl.so
{% endif %}
{% endif %}
Listen {{ api_interface_address | put_address_in_context('url') }}:{{ octavia_api_listen_port }}

ServerSignature Off
ServerTokens Prod
TraceEnable off
TimeOut {{ kolla_httpd_timeout }}
KeepAliveTimeout {{ kolla_httpd_keep_alive }}

{% if octavia_logging_debug | bool %}
LogLevel info
{% endif %}

<VirtualHost *:{{ octavia_api_listen_port }}>
    WSGIDaemonProcess octavia-api processes={{ octavia_api_workers }} threads=1 user=octavia group=octavia display-name=octavia-api
    WSGIProcessGroup octavia-api
    WSGIScriptAlias / {{ wsgi_directory }}/octavia-wsgi
    WSGIApplicationGroup %{GLOBAL}
    WSGIPassAuthorization On
    <IfVersion >= 2.4>
      ErrorLogFormat "%{cu}t %M"
    </IfVersion>
    ErrorLog /var/log/kolla/octavia/octavia-api-error.log
    LogFormat "%{X-Forwarded-For}i %l %u %t \"%r\" %>s %b %D \"%{Referer}i\" \"%{User-Agent}i\"" logformat
    CustomLog /var/log/kolla/octavia/octavia-api-access.log logformat
    <Directory {{ wsgi_directory }}>
        <Files octavia-wsgi>
            Require all granted
        </Files>
    </Directory>
{% if octavia_enable_tls_backend | bool %}
    SSLEngine On
    SSLCertificateFile /etc/octavia/certs/octavia-cert.pem
    SSLCertificateKeyFile /etc/octavia/certs/octavia-key.pem
{% endif %}
</VirtualHost>
