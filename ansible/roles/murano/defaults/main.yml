---
murano_services:
  murano-api:
    container_name: murano_api
    group: murano-api
    enabled: true
    image: "{{ murano_api_image_full }}"
    volumes: "{{ murano_api_default_volumes + murano_api_extra_volumes }}"
    dimensions: "{{ murano_api_dimensions }}"
    haproxy:
      murano_api:
        enabled: "{{ enable_murano }}"
        mode: "http"
        external: false
        port: "{{ murano_api_port }}"
      murano_api_external:
        enabled: "{{ enable_murano }}"
        mode: "http"
        external: true
        port: "{{ murano_api_port }}"
  murano-engine:
    container_name: murano_engine
    group: murano-engine
    enabled: true
    image: "{{ murano_engine_image_full }}"
    volumes: "{{ murano_engine_default_volumes + murano_engine_extra_volumes }}"
    dimensions: "{{ murano_engine_dimensions }}"


####################
# Database
####################
murano_database_name: "murano"
murano_database_user: "{% if use_preconfigured_databases | bool and use_common_mariadb_user | bool %}{{ database_user }}{% else %}murano{% endif %}"
murano_database_address: "{{ database_address | put_address_in_context('url') }}:{{ database_port }}"

####################
# Database sharding
####################
murano_database_shard_root_user: "{% if enable_proxysql | bool %}root_shard_{{ murano_database_shard_id }}{% else %}{{ database_user }}{% endif %}"
murano_database_shard_id: "{{ mariadb_default_database_shard_id | int }}"
murano_database_shard:
  users:
    - user: "{{ murano_database_user }}"
      password: "{{ murano_database_password }}"
  rules:
    - schema: "{{ murano_database_name }}"
      shard_id: "{{ murano_database_shard_id }}"


####################
# Docker
####################
murano_tag: "{{ openstack_tag }}"

murano_api_image: "{{ docker_registry ~ '/' if docker_registry else '' }}{{ docker_namespace }}/murano-api"
murano_api_tag: "{{ murano_tag }}"
murano_api_image_full: "{{ murano_api_image }}:{{ murano_api_tag }}"

murano_engine_image: "{{ docker_registry ~ '/' if docker_registry else '' }}{{ docker_namespace }}/murano-engine"
murano_engine_tag: "{{ murano_tag }}"
murano_engine_image_full: "{{ murano_engine_image }}:{{ murano_engine_tag }}"

murano_api_dimensions: "{{ default_container_dimensions }}"
murano_engine_dimensions: "{{ default_container_dimensions }}"

murano_api_default_volumes:
  - "{{ node_config_directory }}/murano-api/:{{ container_config_directory }}/:ro"
  - "{{ kolla_dev_repos_directory ~ '/murano/murano:/var/lib/kolla/venv/lib/python' ~ distro_python_version ~ '/site-packages/murano' if murano_dev_mode | bool else '' }}"
  - "/etc/localtime:/etc/localtime:ro"
  - "{{ '/etc/timezone:/etc/timezone:ro' if ansible_facts.os_family == 'Debian' else '' }}"
  - "kolla_logs:/var/log/kolla/"
murano_engine_default_volumes:
  - "{{ node_config_directory }}/murano-engine/:{{ container_config_directory }}/:ro"
  - "{{ kolla_dev_repos_directory ~ '/murano/murano:/var/lib/kolla/venv/lib/python' ~ distro_python_version ~ '/site-packages/murano' if murano_dev_mode | bool else '' }}"
  - "/etc/localtime:/etc/localtime:ro"
  - "{{ '/etc/timezone:/etc/timezone:ro' if ansible_facts.os_family == 'Debian' else '' }}"
  - "kolla_logs:/var/log/kolla/"

murano_extra_volumes: "{{ default_extra_volumes }}"
murano_api_extra_volumes: "{{ murano_extra_volumes }}"
murano_engine_extra_volumes: "{{ murano_extra_volumes }}"

####################
# OpenStack
####################
murano_internal_endpoint: "{{ internal_protocol }}://{{ kolla_internal_fqdn | put_address_in_context('url') }}:{{ murano_api_port }}"
murano_public_endpoint: "{{ public_protocol }}://{{ kolla_external_fqdn | put_address_in_context('url') }}:{{ murano_api_port }}"

murano_logging_debug: "{{ openstack_logging_debug }}"

openstack_murano_auth: "{{ openstack_auth }}"

murano_agent_timeout: 3600

murano_engine_workers: "{{ openstack_service_workers }}"
murano_api_workers: "{{ openstack_service_workers }}"

####################
# Kolla
####################
murano_git_repository: "{{ kolla_dev_repos_git }}/{{ project_name }}"
murano_dev_repos_pull: "{{ kolla_dev_repos_pull }}"
murano_dev_mode: "{{ kolla_dev_mode }}"
murano_source_version: "{{ kolla_source_version }}"

####################
# Notifications
####################
murano_notification_topics:
  - name: notifications
    enabled: "{{ enable_ceilometer | bool }}"

murano_enabled_notification_topics: "{{ murano_notification_topics | selectattr('enabled', 'equalto', true) | list }}"

####################
# Keystone
####################
murano_ks_services:
  - name: "murano"
    type: "application-catalog"
    description: "Openstack Application Catalogue"
    endpoints:
      - {'interface': 'internal', 'url': '{{ murano_internal_endpoint }}'}
      - {'interface': 'public', 'url': '{{ murano_public_endpoint }}'}

murano_ks_users:
  - project: "service"
    user: "{{ murano_keystone_user }}"
    password: "{{ murano_keystone_password }}"
    role: "admin"
