[DEFAULT]
debug = {{ murano_logging_debug }}

log_dir = /var/log/kolla/murano

{% if service_name == 'murano-api' %}
bind_host = {{ api_interface_address }}
bind_port = {{ murano_api_port }}
{% endif %}

transport_url = {{ rpc_transport_url }}

[engine]
engine_workers = {{ murano_engine_workers }}
agent_timeout = {{ murano_agent_timeout }}

[database]
connection = mysql+pymysql://{{ murano_database_user }}:{{ murano_database_password }}@{{ murano_database_address }}/{{ murano_database_name }}
connection_recycle_time = {{ database_connection_recycle_time }}
max_pool_size = {{ database_max_pool_size }}
max_retries = -1

[keystone_authtoken]
service_type = application-catalog
www_authenticate_uri = {{ keystone_internal_url }}
auth_url = {{ keystone_internal_url }}
auth_type = password
project_domain_id = {{ default_project_domain_id }}
user_domain_id = {{ default_user_domain_id }}
project_name = service
username = {{ murano_keystone_user }}
password = {{ murano_keystone_password }}
cafile = {{ openstack_cacert }}
region_name = {{ openstack_region_name }}

memcache_security_strategy = ENCRYPT
memcache_secret_key = {{ memcache_secret_key }}
memcached_servers = {% for host in groups['memcached'] %}{{ 'api' | kolla_address(host) | put_address_in_context('memcache') }}:{{ memcached_port }}{% if not loop.last %},{% endif %}{% endfor %}

[murano_auth]
auth_uri = {{ keystone_internal_url }}
auth_url = {{ keystone_internal_url }}
auth_type = password
project_domain_name = {{ default_project_domain_name }}
user_domain_name = {{ default_user_domain_name }}
project_name = service
username = {{ murano_keystone_user }}
password = {{ murano_keystone_password }}
cafile = {{ openstack_cacert }}

[murano]
url = {{ murano_internal_endpoint }}
api_workers = {{ murano_api_workers }}

[oslo_messaging_notifications]
transport_url = {{ notify_transport_url }}
{% if murano_enabled_notification_topics %}
driver = messagingv2
topics = {{ murano_enabled_notification_topics | map(attribute='name') | join(',') }}
{% else %}
driver = noop
{% endif %}

{% if om_enable_rabbitmq_tls | bool %}
[oslo_messaging_rabbit]
ssl = true
ssl_ca_file = {{ om_rabbitmq_cacert }}
{% endif %}

[oslo_middleware]
enable_proxy_headers_parsing = True

{% if murano_policy_file is defined %}
[oslo_policy]
policy_file = {{ murano_policy_file }}
{% endif %}

{% if service_name == 'murano-engine' %}
[rabbitmq]
host = {{ kolla_external_fqdn }}
port = {{ outward_rabbitmq_port }}
login = {{ murano_agent_rabbitmq_user }}
password = {{ murano_agent_rabbitmq_password }}
virtual_host = {{ murano_agent_rabbitmq_vhost }}

{% if enable_barbican | bool %}
[key_manager]
auth_type = keystone_password
auth_url = {{ keystone_internal_url }}
username = {{ murano_keystone_user }}
password = {{ murano_keystone_password }}
user_domain_name = {{ default_project_domain_name }}
cafile = {{ openstack_cacert }}
region_name = {{ openstack_region_name }}
{% endif %}
{% endif %}

[neutron]
endpoint_type = internalURL
cafile = {{ openstack_cacert }}

[heat]
endpoint_type = internalURL
cafile = {{ openstack_cacert }}

[glance]
endpoint_type = internalURL
cafile = {{ openstack_cacert }}

[mistral]
endpoint_type = internalURL
cafile = {{ openstack_cacert }}
