---
sahara_services:
  sahara-api:
    container_name: sahara_api
    group: sahara-api
    enabled: true
    image: "{{ sahara_api_image_full }}"
    volumes: "{{ sahara_api_default_volumes + sahara_api_extra_volumes }}"
    dimensions: "{{ sahara_api_dimensions }}"
    healthcheck: "{{ sahara_api_healthcheck }}"
    haproxy:
      sahara_api:
        enabled: "{{ enable_sahara }}"
        mode: "http"
        external: false
        port: "{{ sahara_api_port }}"
      sahara_api_external:
        enabled: "{{ enable_sahara }}"
        mode: "http"
        external: true
        port: "{{ sahara_api_port }}"
  sahara-engine:
    container_name: sahara_engine
    group: sahara-engine
    enabled: true
    image: "{{ sahara_engine_image_full }}"
    privileged: True
    volumes: "{{ sahara_engine_default_volumes + sahara_engine_extra_volumes }}"
    dimensions: "{{ sahara_engine_dimensions }}"
    healthcheck: "{{ sahara_engine_healthcheck }}"


####################
# Database
####################
sahara_database_name: "sahara"
sahara_database_user: "{% if use_preconfigured_databases | bool and use_common_mariadb_user | bool %}{{ database_user }}{% else %}sahara{% endif %}"
sahara_database_address: "{{ database_address | put_address_in_context('url') }}:{{ database_port }}"

####################
# Database sharding
####################
sahara_database_shard_root_user: "{% if enable_proxysql | bool %}root_shard_{{ sahara_database_shard_id }}{% else %}{{ database_user }}{% endif %}"
sahara_database_shard_id: "{{ mariadb_default_database_shard_id | int }}"
sahara_database_shard:
  users:
    - user: "{{ sahara_database_user }}"
      password: "{{ sahara_database_password }}"
  rules:
    - schema: "{{ sahara_database_name }}"
      shard_id: "{{ sahara_database_shard_id }}"


####################
# Docker
####################
sahara_tag: "{{ openstack_tag }}"

sahara_engine_image: "{{ docker_registry ~ '/' if docker_registry else '' }}{{ docker_namespace }}/sahara-engine"
sahara_engine_tag: "{{ sahara_tag }}"
sahara_engine_image_full: "{{ sahara_engine_image }}:{{ sahara_engine_tag }}"

sahara_api_image: "{{ docker_registry ~ '/' if docker_registry else '' }}{{ docker_namespace }}/sahara-api"
sahara_api_tag: "{{ sahara_tag }}"
sahara_api_image_full: "{{ sahara_api_image }}:{{ sahara_api_tag }}"

sahara_api_dimensions: "{{ default_container_dimensions }}"
sahara_engine_dimensions: "{{ default_container_dimensions }}"

sahara_api_enable_healthchecks: "{{ enable_container_healthchecks }}"
sahara_api_healthcheck_interval: "{{ default_container_healthcheck_interval }}"
sahara_api_healthcheck_retries: "{{ default_container_healthcheck_retries }}"
sahara_api_healthcheck_start_period: "{{ default_container_healthcheck_start_period }}"
sahara_api_healthcheck_test: ["CMD-SHELL", "healthcheck_curl http://{{ api_interface_address | put_address_in_context('url') }}:{{ sahara_api_port }}"]
sahara_api_healthcheck_timeout: "{{ default_container_healthcheck_timeout }}"
sahara_api_healthcheck:
  interval: "{{ sahara_api_healthcheck_interval }}"
  retries: "{{ sahara_api_healthcheck_retries }}"
  start_period: "{{ sahara_api_healthcheck_start_period }}"
  test: "{% if sahara_api_enable_healthchecks | bool %}{{ sahara_api_healthcheck_test }}{% else %}NONE{% endif %}"
  timeout: "{{ sahara_api_healthcheck_timeout }}"

sahara_engine_enable_healthchecks: "{{ enable_container_healthchecks }}"
sahara_engine_healthcheck_interval: "{{ default_container_healthcheck_interval }}"
sahara_engine_healthcheck_retries: "{{ default_container_healthcheck_retries }}"
sahara_engine_healthcheck_start_period: "{{ default_container_healthcheck_start_period }}"
sahara_engine_healthcheck_test: ["CMD-SHELL", "healthcheck_port sahara_engine {{ om_rpc_port }}"]
sahara_engine_healthcheck_timeout: "{{ default_container_healthcheck_timeout }}"
sahara_engine_healthcheck:
  interval: "{{ sahara_engine_healthcheck_interval }}"
  retries: "{{ sahara_engine_healthcheck_retries }}"
  start_period: "{{ sahara_engine_healthcheck_start_period }}"
  test: "{% if sahara_engine_enable_healthchecks | bool %}{{ sahara_engine_healthcheck_test }}{% else %}NONE{% endif %}"
  timeout: "{{ sahara_engine_healthcheck_timeout }}"

sahara_api_default_volumes:
  - "{{ node_config_directory }}/sahara-api/:{{ container_config_directory }}/:ro"
  - "/etc/localtime:/etc/localtime:ro"
  - "{{ '/etc/timezone:/etc/timezone:ro' if ansible_facts.os_family == 'Debian' else '' }}"
  - "sahara:/var/lib/sahara/"
  - "kolla_logs:/var/log/kolla/"
  - "{{ kolla_dev_repos_directory ~ '/sahara/sahara:/var/lib/kolla/venv/lib/python' ~ distro_python_version ~ '/site-packages/sahara' if sahara_dev_mode | bool else '' }}"
sahara_engine_default_volumes:
  - "{{ node_config_directory }}/sahara-engine/:{{ container_config_directory }}/:ro"
  - "/etc/localtime:/etc/localtime:ro"
  - "{{ '/etc/timezone:/etc/timezone:ro' if ansible_facts.os_family == 'Debian' else '' }}"
  - "sahara:/var/lib/sahara/"
  - "kolla_logs:/var/log/kolla/"
  - "/run:/run:shared"
  - "{{ kolla_dev_repos_directory ~ '/sahara/sahara:/var/lib/kolla/venv/lib/python' ~ distro_python_version ~ '/site-packages/sahara' if sahara_dev_mode | bool else '' }}"

sahara_extra_volumes: "{{ default_extra_volumes }}"
sahara_api_extra_volumes: "{{ sahara_extra_volumes }}"
sahara_engine_extra_volumes: "{{ sahara_extra_volumes }}"

####################
# OpenStack
####################
sahara_internal_endpoint: "{{ internal_protocol }}://{{ kolla_internal_fqdn | put_address_in_context('url') }}:{{ sahara_api_port }}"
sahara_public_endpoint: "{{ public_protocol }}://{{ kolla_external_fqdn | put_address_in_context('url') }}:{{ sahara_api_port }}"

sahara_logging_debug: "{{ openstack_logging_debug }}"

sahara_keystone_user: "sahara"

openstack_sahara_auth: "{{ openstack_auth }}"

sahara_api_workers: "{{ openstack_service_workers }}"

####################
## Kolla
#####################
sahara_git_repository: "{{ kolla_dev_repos_git }}/{{ project_name }}"
sahara_dev_repos_pull: "{{ kolla_dev_repos_pull }}"
sahara_dev_mode: "{{ kolla_dev_mode }}"
sahara_source_version: "{{ kolla_source_version }}"

####################
# Notifications
####################
sahara_notification_topics:
  - name: notifications
    enabled: "{{ enable_ceilometer | bool }}"

sahara_enabled_notification_topics: "{{ sahara_notification_topics | selectattr('enabled', 'equalto', true) | list }}"

####################
# Keystone
####################
sahara_ks_services:
  - name: "sahara"
    type: "data-processing"
    description: "Sahara Data Processing"
    endpoints:
      - {'interface': 'internal', 'url': '{{ sahara_internal_endpoint }}'}
      - {'interface': 'public', 'url': '{{ sahara_public_endpoint }}'}

sahara_ks_users:
  - project: "service"
    user: "{{ sahara_keystone_user }}"
    password: "{{ sahara_keystone_password }}"
    role: "admin"
