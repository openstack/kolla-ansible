---
libnetwork_project_name: "kuryr-libnetwork"

# NOTE(huikang, apuimedo): when you request a driver in a docker operation, such
# as docker network create, docker searches /usr/lib/docker or /etc/docker
# subdirs for network/storage plugin specs or json definitions. so it's either
# have ansible place the file there, or volume mount it and let the container
# place the file there

kuryr_services:
  kuryr:
    container_name: kuryr
    group: compute
    enabled: True
    image: "{{ kuryr_image_full }}"
    privileged: True
    cap_add:
      - NET_ADMIN
    volumes: "{{ kuryr_default_volumes + kuryr_extra_volumes }}"
    dimensions: "{{ kuryr_dimensions }}"
    healthcheck: "{{ kuryr_healthcheck }}"


####################
# Docker
####################
kuryr_image: "{{ docker_registry ~ '/' if docker_registry else '' }}{{ docker_namespace }}/kuryr-libnetwork"
kuryr_tag: "{{ openstack_tag }}"
kuryr_image_full: "{{ kuryr_image }}:{{ kuryr_tag }}"

kuryr_enable_healthchecks: "{{ enable_container_healthchecks }}"
kuryr_healthcheck_interval: "{{ default_container_healthcheck_interval }}"
kuryr_healthcheck_retries: "{{ default_container_healthcheck_retries }}"
kuryr_healthcheck_start_period: "{{ default_container_healthcheck_start_period }}"
kuryr_healthcheck_test: ["CMD-SHELL", "healthcheck_listen kuryr-server {{ kuryr_port }}"]
kuryr_healthcheck_timeout: "{{ default_container_healthcheck_timeout }}"
kuryr_healthcheck:
  interval: "{{ kuryr_healthcheck_interval }}"
  retries: "{{ kuryr_healthcheck_retries }}"
  start_period: "{{ kuryr_healthcheck_start_period }}"
  test: "{% if kuryr_enable_healthchecks | bool %}{{ kuryr_healthcheck_test }}{% else %}NONE{% endif %}"
  timeout: "{{ kuryr_healthcheck_timeout }}"

kuryr_default_volumes:
  - "{{ node_config_directory }}/kuryr/:{{ container_config_directory }}/:ro"
  - "/etc/localtime:/etc/localtime:ro"
  - "{{ '/etc/timezone:/etc/timezone:ro' if ansible_facts.os_family == 'Debian' else '' }}"
  - "/lib/modules:/lib/modules:ro"
  - "/run:/run:shared"
  - "/usr/lib/docker:/usr/lib/docker"
  - "{{ kolla_dev_repos_directory ~ '/kuryr/kuryr:/var/lib/kolla/venv/lib/python' ~ distro_python_version ~ '/site-packages/kuryr' if kuryr_dev_mode | bool else '' }}"
  - "{{ kolla_dev_repos_directory ~ '/kuryr-libnetwork/kuryr_libnetwork:/var/lib/kolla/venv/lib/python' ~ distro_python_version ~ '/site-packages/kuryr_libnetwork' if kuryr_dev_mode | bool else '' }}"
  - "kolla_logs:/var/log/kolla/"

kuryr_extra_volumes: "{{ default_extra_volumes }}"

####################
# OpenStack
####################
kuryr_logging_debug: "{{ openstack_logging_debug }}"

kuryr_keystone_user: "kuryr"

openstack_kuryr_auth: "{{ openstack_auth }}"


####################
# Kolla
####################
kuryr_git_repository: "{{ kolla_dev_repos_git }}/{{ project_name }}"
kuryr_libnetwork_git_repository: "{{ kolla_dev_repos_git }}/{{ libnetwork_project_name }}"
kuryr_dev_repos_pull: "{{ kolla_dev_repos_pull }}"
kuryr_dev_mode: "{{ kolla_dev_mode }}"
kuryr_dimensions: "{{ default_container_dimensions }}"
kuryr_source_version: "{{ kolla_source_version }}"

####################
# Keystone
####################
kuryr_ks_users:
  - project: "service"
    user: "{{ kuryr_keystone_user }}"
    password: "{{ kuryr_keystone_password }}"
    role: "admin"

###########
# Endpoints
##########
kuryr_internal_endpoint: "{{ internal_protocol }}://{{ api_interface_address | put_address_in_context('url') }}:{{ kuryr_port }}"
